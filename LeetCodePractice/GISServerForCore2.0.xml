<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LeetCodePractice</name>
    </assembly>
    <members>
        <member name="T:LeetCodePractice.HangFireHelper">
            <summary>
            HangFire帮助类
            </summary>
        </member>
        <member name="M:LeetCodePractice.HangFireHelper.StartHangFireTask">
            <summary>
            开始HangFire后台任务
            </summary>
        </member>
        <member name="M:LeetCodePractice.HangFireHelper.AutomaticSignOutTask">
            <summary>
            
            </summary>
        </member>
        <member name="M:LeetCodePractice.HangFireHelper.AutoTackDemo">
            <summary>
            自动任务Demo
            </summary>
            <returns></returns>
        </member>
        <member name="M:LeetCodePractice.MvcOptionsExtensions.UseCentralRoutePrefix(Microsoft.AspNetCore.Mvc.MvcOptions,Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider)">
            <summary>
            扩展方法
            </summary>
            <param name="opts"></param>
            <param name="routeAttribute"></param>
        </member>
        <member name="T:LeetCodePractice.RouteConvention">
            <summary>
            全局路由前缀配置
            </summary>
        </member>
        <member name="F:LeetCodePractice.RouteConvention._centralPrefix">
            <summary>
            定义一个路由前缀变量
            </summary>
        </member>
        <member name="M:LeetCodePractice.RouteConvention.#ctor(Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider)">
            <summary>
            调用时传入指定的路由前缀
            </summary>
            <param name="routeTemplateProvider"></param>
        </member>
        <member name="M:LeetCodePractice.RouteConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <summary>
            接口的Apply方法
            </summary>
            <param name="application"></param>
        </member>
        <member name="M:LeetCodePractice.Startup.GetClassName(System.String)">
            <summary>  
            获取程序集中的实现类对应的多个接口
            </summary>  
            <param name="assemblyName">程序集</param>
        </member>
    </members>
</doc>
